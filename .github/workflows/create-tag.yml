on:
  push:
    branches:
      - main
  
name: Generate
jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
    - name: GitHub Tag (with tags filter)
      # You may pin to the exact commit or the version.
      # uses: IIlyichev/github-tag-action@8b40ce208f6d7f902a3ee8c761f76db20fd87475
      uses: mathieudutour/github-tag-action@v6.2
      with:
        # Required for permission to tag the repo.
        github_token: "${{ secrets.GITHUB_TOKEN }}"
        # Which type of bump to use when none explicitly provided when commiting to a release branch (default: `patch`).
        # default_bump: # optional, default is patch
        # Which type of bump to use when none explicitly provided when commiting to a prerelease branch (default: `prerelease`).
        # default_prerelease_bump: # optional, default is prerelease
        # A prefix to the tag name (default: `v`).
        # tag_prefix: # optional, default is v
        # Tags filter string.
        # tag_filter: # optional
        # A suffix to a pre-release tag name (default: `<branch>`).
        # append_to_pre_release_tag: # optional
        # Custom tag name. If specified, it overrides bump settings.
        # custom_tag: # optional
        # Comma separated list of release rules. Format: `<keyword>:<release_type>`. Example: `hotfix:patch,pre-feat:preminor`.
        # custom_release_rules: # optional
        # Comma separated list of branches (bash reg exp accepted) that will generate the release tags. Other branches and pull-requests generate versions postfixed with the commit hash and do not generate any tag. Examples: `master` or `.*` or `release.*,hotfix.*,master`...
        # release_branches: # optional, default is master,main
        # Comma separated list of branches (bash reg exp accepted) that will generate pre-release tags.
        # pre_release_branches: # optional
        # The commit SHA value to add the tag. If specified, it uses this value instead GITHUB_SHA. It could be useful when a previous step merged a branch into github.ref.
        # commit_sha: # optional
        # Boolean to create an annotated tag rather than lightweight.
        # create_annotated_tag: # optional, default is false
        # Boolean to fetch all tags for a repo (if false, only the last 100 will be fetched).
        # fetch_all_tags: # optional, default is false
        # Do not perform tagging, just calculate next version and changelog, then exit.
        # dry_run: # optional, default is false
              
      # - uses: actions/checkout@v3
      #   with:
      #     fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
      # - name: 'Get Previous tag'
      #   id: previoustag
      #   uses: "WyriHaximus/github-action-get-previous-tag@v1"
      #   with:
      #     fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
      #     #workingDirectory: another/path/where/a/git/repo/is/checked/out # Optional alternative working directory
      # - name: 'Get next minor version'
      #   id: semvers
      #   uses: "WyriHaximus/github-action-next-semvers@v1"
      #   with:
      #     version: ${{ steps.previoustag.outputs.tag }}
      # - name: 'Create new milestone'
      #   id: createmilestone
      #   uses: "WyriHaximus/github-action-create-milestone@v1"
      #   with:
      #     title: ${{ steps.semvers.outputs.patch }}
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
